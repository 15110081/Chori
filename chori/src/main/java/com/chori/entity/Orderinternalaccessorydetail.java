package com.chori.entity;
// Generated Dec 8, 2016 6:21:17 PM by Hibernate Tools 5.1.0.Beta1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orderinternalaccessorydetail generated by hbm2java
 */
@Entity
@Table(name = "orderinternalaccessorydetail")
public class Orderinternalaccessorydetail implements java.io.Serializable {

	private OrderinternalaccessorydetailId id;
	private Accessory accessory;
	private Orderinternalaccessory orderinternalaccessory;
	private User user;
	private Double orderquantity;
	private Double actualdelvquantity;
	private Double price;
	private Date createdate;
	private Double unitprice;

	public Orderinternalaccessorydetail() {
	}

	public Orderinternalaccessorydetail(OrderinternalaccessorydetailId id, Accessory accessory,
			Orderinternalaccessory orderinternalaccessory) {
		this.id = id;
		this.accessory = accessory;
		this.orderinternalaccessory = orderinternalaccessory;
	}

	public Orderinternalaccessorydetail(OrderinternalaccessorydetailId id, Accessory accessory,
			Orderinternalaccessory orderinternalaccessory, User user, Double orderquantity, Double actualdelvquantity,
			Double price, Date createdate, Double unitprice) {
		this.id = id;
		this.accessory = accessory;
		this.orderinternalaccessory = orderinternalaccessory;
		this.user = user;
		this.orderquantity = orderquantity;
		this.actualdelvquantity = actualdelvquantity;
		this.price = price;
		this.createdate = createdate;
		this.unitprice = unitprice;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "accessorycode", column = @Column(name = "ACCESSORYCODE", nullable = false, length = 100)),
			@AttributeOverride(name = "ordersheetno", column = @Column(name = "ORDERSHEETNO", nullable = false, length = 50)) })
	public OrderinternalaccessorydetailId getId() {
		return this.id;
	}

	public void setId(OrderinternalaccessorydetailId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ACCESSORYCODE", nullable = false, insertable = false, updatable = false)
	public Accessory getAccessory() {
		return this.accessory;
	}

	public void setAccessory(Accessory accessory) {
		this.accessory = accessory;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ORDERSHEETNO", nullable = false, insertable = false, updatable = false)
	public Orderinternalaccessory getOrderinternalaccessory() {
		return this.orderinternalaccessory;
	}

	public void setOrderinternalaccessory(Orderinternalaccessory orderinternalaccessory) {
		this.orderinternalaccessory = orderinternalaccessory;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATOR")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "ORDERQUANTITY")
	public Double getOrderquantity() {
		return this.orderquantity;
	}

	public void setOrderquantity(Double orderquantity) {
		this.orderquantity = orderquantity;
	}

	@Column(name = "ACTUALDELVQUANTITY")
	public Double getActualdelvquantity() {
		return this.actualdelvquantity;
	}

	public void setActualdelvquantity(Double actualdelvquantity) {
		this.actualdelvquantity = actualdelvquantity;
	}

	@Column(name = "PRICE", precision = 20, scale = 4)
	public Double getPrice() {
		return this.price;
	}

	public void setPrice(Double price) {
		this.price = price;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATEDATE", length = 19)
	public Date getCreatedate() {
		return this.createdate;
	}

	public void setCreatedate(Date createdate) {
		this.createdate = createdate;
	}

	@Column(name = "UNITPRICE", precision = 20, scale = 4)
	public Double getUnitprice() {
		return this.unitprice;
	}

	public void setUnitprice(Double unitprice) {
		this.unitprice = unitprice;
	}

}
