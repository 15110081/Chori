package com.chori.entity;
// Generated Dec 8, 2016 6:21:17 PM by Hibernate Tools 5.1.0.Beta1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Destination generated by hbm2java
 */
@Entity
@Table(name = "destination")
public class Destination implements java.io.Serializable {

	private String destinationcode;
	private User user;
	private String description;
	private Date createdate;
	private Set<Pi> pis = new HashSet<Pi>(0);

	public Destination() {
	}

	public Destination(String destinationcode) {
		this.destinationcode = destinationcode;
	}

	public Destination(String destinationcode, User user, String description, Date createdate, Set<Pi> pis) {
		this.destinationcode = destinationcode;
		this.user = user;
		this.description = description;
		this.createdate = createdate;
		this.pis = pis;
	}

	@Id

	@Column(name = "DESTINATIONCODE", unique = true, nullable = false, length = 20)
	public String getDestinationcode() {
		return this.destinationcode;
	}

	public void setDestinationcode(String destinationcode) {
		this.destinationcode = destinationcode;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CREATOR")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "DESCRIPTION", length = 200)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATEDATE", length = 19)
	public Date getCreatedate() {
		return this.createdate;
	}

	public void setCreatedate(Date createdate) {
		this.createdate = createdate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "destination")
	public Set<Pi> getPis() {
		return this.pis;
	}

	public void setPis(Set<Pi> pis) {
		this.pis = pis;
	}

}
